// Generated by CoffeeScript 1.7.1
'use strict';
module.exports = function(grunt) {
  grunt.initConfig({
    browserify: {
      dist: {
        files: {
          'dist/bundle.js': ['src/index.js']
        }
      }
    },
    exec: {
      clean: {
        command: 'rm -rf dist'
      },
      mv4test: {
        command: 'cp dist/bundle.js dev/'
      }
    },
    connect: {
      server: {
        options: {
          base: ["dev"],
          hostname: "0.0.0.0"
        }
      },
      options: {
        port: 8000,
        livereload: 35729
      }
    },
    watch: {
      livereload: {
        files: ["src/**/*.js"],
        tasks: ["browserify", "exec:mv4test"],
        options: {
          livereload: 35729
        }
      }
    },
    karma: {
      options: {
        frameworks: ['jasmine', 'commonjs'],
        files: [
          'src/**/*.js',
          'test/ut/**/*.js'
        ],
        preprocessors: {
          'src/**/*.js': ['commonjs'],
          'test/ut/**/*.js': ['commonjs']
        },
        singleRun: true
      },
      browsers: {
        options: {
          browsers: ['Chrome'],
          reporters: ['spec']
        }
      },
      coverage: {
        options: {
          browsers: ['Chrome'],
          reporters: ['progress', 'coverage'],
          preprocessors: {
            'src/**/*.js': ['commonjs', 'coverage'],
            'test/ut/**/*.js': ['commonjs']
          },
          coverageReporter: {
            reporters: [
              { type: 'lcov' },
              { type: 'text-summary' }
            ]
          }
        }
      }
    },
  });
  
  grunt.loadNpmTasks('grunt-karma')
  grunt.loadNpmTasks('grunt-browserify');
  grunt.loadNpmTasks('grunt-exec');
  grunt.loadNpmTasks("grunt-contrib-connect");
  grunt.loadNpmTasks("grunt-contrib-watch");

  grunt.registerTask('default', [
    'browserify',
    'exec:mv4test',
    "connect", 
    "watch"
  ]);
  grunt.registerTask('build', [
    'browserify',
    //todo
  ]);
  grunt.registerTask('ut', [
    'karma:browsers'
  ]);
};
